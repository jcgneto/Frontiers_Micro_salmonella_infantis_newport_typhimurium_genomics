# check the number of unique baps_1 sub-groups
a <- data2 %>% select(cgmlst_ST) %>% drop_na() %>% distinct(cgmlst_ST) %>% count()
a
############################################################
# Enter Baps 1-6
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/newport/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:2] <- c("id", "baps_1")
# Select colunms id and baps_1
b1 <- baps %>%
select(id, baps_1)
data3 <- b1
# check the number of unique baps_1
a <- data3 %>% select(baps_1) %>% drop_na() %>% distinct(baps_1) %>% count()
a
############################################################################
# Merge data1 and data2
data_1_2 <- left_join(data1, data2, on = "id")
# Merge data_1_2 with data_baps
data4 <- left_join(data_1_2, data3, on = "id")
data5 <- data4 %>%
select(id, st, cgmlst_ST, serovar, baps_1)
############################################################################
# Plot Serovar distribution
serovar_data <- data5 %>%
drop_na(serovar) %>%
select(serovar) %>%
group_by(serovar) %>%
summarise(n = n()) %>%
mutate(prop_serovar = n/sum(n)*100)
sero_plot <- ggplot(serovar_data, aes(x = prop_serovar, y = serovar, fill = serovar)) + xlim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
ylab("") +
xlab("Proportion") +
theme(axis.text.y = element_text(size = 30)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 30, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.7, size = 26)) +
scale_fill_manual(values=c("gray", "darkblue")) +
ggtitle("Serovar") +
theme(plot.title = element_text(size = 40, face = "bold")) +
geom_col() +
annotate(geom = "text", label = "n = 2,365 genomes", x = 60, y = 2,
color = "black", size = 8)
sero_plot
##################################################################################
# Plot ST distribution
st_data <- data5 %>%
drop_na(serovar, st) %>%
select(serovar, st) %>%
group_by(serovar, st) %>%
summarise(n = n()) %>%
mutate(prop_st = n/sum(n)*100) %>%
filter(serovar != "Other serovars")
st_data$st <- factor(st_data$st, levels=c("ST118", "ST45", "ST5", "Other STs"))
st_plot <- ggplot(st_data, aes(x = st, y = prop_st, fill = st)) + ylim(0, 105) +
theme_bw() +
theme(legend.position = "none") +
xlab("") +
ylab("Proportion") +
theme(axis.text.y = element_text(size = 28)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 30, face = "bold")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 28)) +
scale_fill_manual(values=c("purple", "darkblue", "black", "darkgreen")) +
ggtitle("ST") +
theme(plot.title = element_text(size = 40, face = "bold")) +
theme(strip.text.x = element_text(size = 20)) +
geom_col()
st_plot
#############################################################
# Plot cgMLST distribution
cgmlst_data <- data5 %>%
drop_na(serovar, cgmlst_ST) %>%
mutate(cgmlst_ST = as.factor(cgmlst_ST)) %>%
select(serovar, cgmlst_ST) %>%
group_by(serovar, cgmlst_ST) %>%
summarise(n = n()) %>%
mutate(prop_cgmlst = n/sum(n)*100) %>%
arrange(serovar, desc(prop_cgmlst)) %>%
filter(serovar != "Other serovars" & cgmlst_ST != "0" & prop_cgmlst > 2)
cgmlst_plot <- ggplot(cgmlst_data, aes(x = reorder(cgmlst_ST, -prop_cgmlst), y = prop_cgmlst, fill = cgmlst_ST)) + ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
xlab("cgMLST clones") +
ylab("Proportion") +
theme(axis.text.y = element_text(size = 28)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 30, face = "bold")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 28)) +
scale_fill_manual(values=c("black", "darkblue", "red", "darkgreen",
"orange", "brown")) +
labs(fill="cgMLST clones") +
ggtitle("cgMLST") +
theme(plot.title = element_text(size = 40, face = "bold")) +
geom_col() +
annotate(geom = "text", label = "> 2%", x = 3, y = 90,
color = "black", size = 9)
cgmlst_plot
################################################################
# Plot baps1 through 6 distribution by serovar
baps_data <- data5 %>%
drop_na(serovar, baps_1) %>%
select(serovar, baps_1) %>%
group_by(serovar, baps_1) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n)*100) %>%
filter(serovar != "Other serovars")
baps_data$baps_1 <- factor(baps_data$baps_1, levels=c("8", "1", "4", "7", "6"))
baps_plot <- ggplot(baps_data, aes(x = baps_1, y = prop, fill = baps_1)) + ylim(0, 105) +
theme_bw() +
theme(legend.position = "none") +
xlab("") +
ylab("Proportion") +
theme(axis.text.y = element_text(size = 30)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 30, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, size = 30)) +
theme(legend.title=element_text(size=30, face = "bold"))+
theme(legend.text=element_text(size=24)) +
scale_fill_manual(name = "Serovar", values=c("orange", "cornflowerblue", "red", "darkcyan", "darkseagreen3")) +
ggtitle("BAPS level 1") +
theme(plot.title = element_text(size = 40, face = "bold")) +
theme(strip.text.x = element_text(size = 20)) +
geom_col()
baps_plot
fig3be  <- ggarrange(sero_plot, baps_plot, st_plot, cgmlst_plot,
nrow = 2, ncol = 2, widths = c(10, 10, 10, 10),
heights = c(1, 1, 1, 1))
fig3be
serovar_data
st_data
cgmlst_data
baps_data
# Enter MLST results
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium//data/typhimurium/global_input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'/'), "[", 3)
s1 <- mlst %>% separate(id2, c("id", "day"), sep = "\\.")
# Select columns of interest
s2 <- s1 %>%
select(id, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
# QC the data
skim(s2)
# st
s2$st <- ifelse(s2$ST == 19, "ST19",
ifelse(s2$ST == 34, "ST34",
ifelse(s2$ST == 36, "ST36",
ifelse(s2$ST == 313, "ST313", "Other STs"))))
# Create data1
data1 <- s2
# check the number of unique STs
a <- data1 %>% select(ST) %>% drop_na() %>% distinct(ST) %>% count()
a
####################################################################
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium//data/typhimurium/global_input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Select columns
sis1 <- sistr %>%
select(genome, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
rename(id = genome)
# Create serovar column
#data1 <- data1 %>% mutate(serovar_cgmlst = replace_na(serovar_cgmlst, 0))
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Typhimurium", "Biphasic",
ifelse(sis1$serovar_cgmlst == "I 4,[5],12:i:-", "Monophasic",
"Other serovars"))
# Create data2 and drop rows with missing values
data2 <- sis1
# check the number of unique cgmlsts
a <- data2 %>% select(cgmlst_ST) %>% drop_na() %>% distinct(cgmlst_ST) %>% count()
a
##########################################################################
# Enter group1-Baps
# Enter the data, create a new column for group, and generate the id column
data3 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/input_data/roary_output_gr1.fastbaps_l6.csv")
data3$group <- "group_1"
colnames(data3)[1] <- "id"
###########################################################################
# Enter group2-Baps
# Enter the data, create a new column for group, and generate the id column
data4 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr2.fastbaps_l6.csv")
data4$group <- "group_2"
colnames(data4)[1] <- "id"
###########################################################################
# Enter group3-Baps
# Enter the data, create a new column for group, and generate the id column
data5 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr3.fastbaps_l6.csv")
data5$group <- "group_3"
colnames(data5)[1] <- "id"
###########################################################################
# Enter group4-Baps
# Enter the data, create a new column for group, and generate the id column
data6 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr4.fastbaps_l6.csv")
data6$group <- "group_4"
colnames(data6)[1] <- "id"
###########################################################################
# Enter group5-Baps
# Enter the data, create a new column for group, and generate the id column
data7 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr5.fastbaps_l6.csv")
data7$group <- "group_5"
colnames(data7)[1] <- "id"
###########################################################################
# Enter group6-Baps
# Enter the data, create a new column for group, and generate the id column
data8 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr6.fastbaps_l6.csv")
data8$group <- "group_6"
colnames(data8)[1] <- "id"
###########################################################################
# Enter group7-Baps
# Enter the data, create a new column for group, and generate the id column
data9 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr7.fastbaps_l6.csv")
data9$group <- "group_7"
colnames(data9)[1] <- "id"
###########################################################################
# Enter group8-Baps
# Enter the data, create a new column for group, and generate the id column
data10 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr8.fastbaps_l6.csv")
data10$group <- "group_8"
colnames(data10)[1] <- "id"
###########################################################################
# Enter group9-Baps
# Enter the data, create a new column for group, and generate the id column
data11 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr9.fastbaps_l6.csv")
data11$group <- "group_9"
colnames(data11)[1] <- "id"
###########################################################################
# Enter group10-Baps
# Enter the data, create a new column for group, and generate the id column
data12 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr10.fastbaps_l6.csv")
data12$group <- "group_10"
colnames(data12)[1] <- "id"
###########################################################################
# Enter group11-Baps
# Enter the data, create a new column for group, and generate the id column
data13 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr11.fastbaps_l6.csv")
data13$group <- "group_11"
colnames(data13)[1] <- "id"
###########################################################################
# Enter group12-Baps
# Enter the data, create a new column for group, and generate the id column
data14 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr12.fastbaps_l6.csv")
data14$group <- "group_12"
colnames(data14)[1] <- "id"
###########################################################################
# Enter group13-Baps
# Enter the data, create a new column for group, and generate the id column
data15 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr13.fastbaps_l6.csv")
data15$group <- "group_13"
colnames(data15)[1] <- "id"
###########################################################################
# Enter group14-Baps
# Enter the data, create a new column for group, and generate the id column
data16 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr14.fastbaps_l6.csv")
data16$group <- "group_14"
colnames(data16)[1] <- "id"
###########################################################################
# Enter group15-Baps
# Enter the data, create a new column for group, and generate the id column
data17 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr15.fastbaps_l6.csv")
data17$group <- "group_15"
colnames(data17)[1] <- "id"
###########################################################################
# Enter group16-Baps
# Enter the data, create a new column for group, and generate the id column
data18 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr16.fastbaps_l6.csv")
data18$group <- "group_16"
colnames(data18)[1] <- "id"
###########################################################################
# Enter group17-Baps
# Enter the data, create a new column for group, and generate the id column
data19 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr17.fastbaps_l6.csv")
data19$group <- "group_17"
colnames(data19)[1] <- "id"
###########################################################################
# Enter group18-Baps
# Enter the data, create a new column for group, and generate the id column
data20 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr18.fastbaps_l6.csv")
data20$group <- "group_18"
colnames(data20)[1] <- "id"
###########################################################################
# Enter group19-Baps
# Enter the data, create a new column for group, and generate the id column
data21 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr19.fastbaps_l6.csv")
data21$group <- "group_19"
colnames(data21)[1] <- "id"
###########################################################################
# Enter group20-Baps
# Enter the data, create a new column for group, and generate the id column
data22 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/roary_output_gr20.fastbaps_l6.csv")
data22$group <- "group_20"
colnames(data22)[1] <- "id"
###########################################################################
# First merge all Baps datasets
data_baps <- bind_rows(data3, data4, data5, data6, data7, data8,
data9, data10, data11, data12, data13, data14,
data15, data16, data17, data18, data19, data20,
data21, data22)
colnames(data_baps)[2:7] <- c("baps_1", "baps_2", "baps_3", "baps_4", "baps_5", "baps_6")
# check the number of unique baps_1  sub-groups
a <- data_baps %>% select(baps_1) %>% drop_na() %>% distinct(baps_1) %>% count()
a
############################################################################
# Merge data1 and data2
data_1_2 <- left_join(data1, data2, on = "id")
# Merge data_1_2 with data_baps
data23 <- left_join(data_1_2, data_baps, on = "id")
glimpse(data23)
data23b <- data23 %>%
select(id, group, st, cgmlst_ST, serovar, baps_1)
############################################################################
# baps1 between monophasic vs biphasic
a <- data23 %>% select(serovar, baps_1) %>% drop_na() %>% group_by(serovar, baps_1) %>% distinct()
b <- a %>% filter(serovar == "Biphasic") %>% count()
m <- a %>% filter(serovar == "Monophasic") %>% count()
o <- a %>% filter(serovar == "Other serovars") %>% count()
# st between monophasic vs biphasic
a <- data23 %>% select(serovar, ST) %>% drop_na() %>% group_by(serovar, ST) %>% distinct()
b <- a %>% filter(serovar == "Biphasic") %>% count()
m <- a %>% filter(serovar == "Monophasic") %>% count()
o <- a %>% filter(serovar == "Other serovars") %>% count()
# cgmlst between monophasic vs biphasic
a <- data23 %>% select(serovar, cgmlst_ST) %>% drop_na() %>% group_by(serovar, cgmlst_ST) %>% distinct()
b <- a %>% filter(serovar == "Biphasic") %>% count()
m <- a %>% filter(serovar == "Monophasic") %>% count()
o <- a %>% filter(serovar == "Other serovars") %>% count()
############################################################################
# Plot Serovar distribution
serovar_data <- data23b %>%
drop_na(serovar) %>%
select(group, serovar) %>%
group_by(group, serovar) %>%
summarise(n = n()) %>%
mutate(prop_serovar = n/sum(n)*100)
serovar_data$serovar <- factor(serovar_data$serovar, levels=c("Biphasic",
"Monophasic",
"Other serovars"))
sero_plot <- ggplot(serovar_data, aes(x = prop_serovar, y = serovar, fill = serovar)) + xlim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
xlab("Proportion") +
ylab("") +
theme(axis.text.y = element_text(size = 35)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 30, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.7, size = 26)) +
scale_fill_manual(values=c("gray", "darkblue", "lightblue")) +
ggtitle("Serovar") +
theme(plot.title = element_text(size = 40, face = "bold")) +
#ggtitle(expression(bold(paste("B. ", bolditalic(S),". Typhimurium", " - Serovar")))) +
#ggtitle(label = "B.",
#subtitle = "Serovar") +
#theme(plot.title = element_text(size = 50, face = "bold"),
#plot.subtitle = element_text(size = 26, face = "bold")) +
geom_boxplot() +
annotate(geom = "text", label = "n = 21,534 genomes", x = 60, y = 3,
color = "black", size = 7)
sero_plot
##################################################################################
# Plot ST distribution
st_data <- data23b %>%
drop_na(serovar, st) %>%
select(group, serovar, st) %>%
group_by(group, serovar, st) %>%
summarise(n = n()) %>%
mutate(prop_st = n/sum(n)*100) %>%
filter(serovar != "Other serovars")
st_data$st <- factor(st_data$st, levels=c("ST19", "ST34", "ST36", "ST313", "Other STs"))
# Calculate a chi-square p-value for independence
st_data2 <- data23b %>%
drop_na(serovar, st)
chisq_st <- chisq.test(table(st_data2$serovar,st_data2$st))
chisq_st
st_plot <- ggplot(st_data, aes(x = st, y = prop_st, fill = st)) + ylim(0, 105) +
theme_bw() +
theme(legend.position = "none") +
xlab("") +
ylab("Proportion") +
theme(axis.text.y = element_text(size = 22)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 25)) +
theme(legend.title=element_text(size=30, face = "bold"))+
theme(legend.text=element_text(size=24)) +
scale_fill_manual(values=c("darkgreen", "darkblue", "gray", "red", "black")) +
ggtitle("ST") +
theme(plot.title = element_text(size = 40, face = "bold")) +
theme(strip.text.x = element_text(size = 20)) +
geom_boxplot() +
annotate(geom = "text", label = "italic(p) < 2.2e-16", x = 3.5, y = 75,
color = "black", size = 7, parse = TRUE) +
facet_wrap(~ serovar)
st_plot
#############################################################
# Plot cgMLST distribution
cgmlst_data <- data23b %>%
drop_na(serovar, cgmlst_ST) %>%
mutate(cgmlst_ST = as.factor(cgmlst_ST)) %>%
select(group, serovar, cgmlst_ST) %>%
group_by(group, serovar, cgmlst_ST) %>%
summarise(n = n()) %>%
mutate(prop_cgmlst = n/sum(n)*100) %>%
arrange(group, serovar, desc(prop_cgmlst)) %>%
filter(serovar != "Other serovars" & cgmlst_ST != "0" & prop_cgmlst > 2)
cgmlst_plot <- ggplot(cgmlst_data, aes(x = reorder(cgmlst_ST, -prop_cgmlst), y = prop_cgmlst, fill = cgmlst_ST)) + ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
xlab("cgMLST clones") +
ylab("Proportion") +
theme(axis.text.y = element_text(size = 22)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20)) +
theme(strip.text.x = element_text(size = 25)) +
scale_fill_manual(values=c("red", "darkblue", "gray", "darkgreen",
"orange", "yellow", "purple", "white", "black", "brown")) +
#scale_fill_gradient2(name = "cgmlst_ST",
#low = "blue", high = "red") +
labs(fill="cgMLST clones") +
ggtitle("cgMLST") +
theme(plot.title = element_text(size = 40, face = "bold")) +
geom_boxplot(position = position_dodge(0.9)) +
annotate(geom = "text", label = "> 2%", x = 3, y = 75,
color = "black", size = 8) +
facet_wrap(~serovar)
cgmlst_plot
################################################################
# Plot baps1 through 6 distribution by serovar
baps_data <- data23b %>%
drop_na(serovar, baps_1) %>%
select(group, serovar, baps_1) %>%
group_by(group, serovar, baps_1) %>%
summarise(n = n()) %>%
mutate(prop = n/sum(n)*100) %>%
filter(serovar != "Other serovars")
baps_data$baps_1 <- factor(baps_data$baps_1, levels=c("1", "2", "3", "4", "5", "6"))
baps_plot <- ggplot(baps_data, aes(x = baps_1, y = prop, fill = serovar)) + ylim(0, 105) +
theme_bw() +
#theme(legend.position = "none") +
xlab("") +
ylab("Proportion") +
theme(axis.text.y = element_text(size = 30)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, size = 28)) +
scale_fill_manual(name = "Serovar", values=c("gray", "darkblue")) +
ggtitle("BAPS level 1") +
theme(plot.title = element_text(size = 40, face = "bold")) +
theme(strip.text.x = element_text(size = 20)) +
theme(legend.title=element_text(size=30, face = "bold")) +
theme(legend.text=element_text(size=24)) +
geom_boxplot()
baps_plot
fig2be  <- ggarrange(sero_plot, baps_plot, st_plot, cgmlst_plot,
nrow = 2, ncol = 2, widths = c(10, 10, 10, 10),
heights = c(1, 1, 1, 1))
fig2be
serovar_data
a <- serovar_data %>% filter(serovar == "Other serovars") %>% summarize(m = mean(prop_serovar))
a
a <- serovar_data %>% filter(serovar == "Other serovars") %>% mutate(m = mean(prop_serovar))
a
a <- serovar_data %>% filter(serovar == "Other serovars") %>% select(prop_serovar) %>% mutate(m = mean(prop_serovar))
a
a <- serovar_data %>% filter(serovar == "Other serovars") %>% select(prop_serovar)
a
summary(a)
st_data
a <- st_data %>% filter(serovar == "Biphasic" & st = "ST19")
a <- st_data %>% filter(serovar == "Biphasic" & st == "ST19")
a
summary(a)
a <- st_data %>% filter(serovar == "Monophasic" & st == "ST34")
a
summary(a)
a <- st_data %>% filter(serovar == "Biphasic" & st == "ST36")
summary(a)
a <- st_data %>% filter(serovar == "Biphasic" & st == "ST313")
summary(a)
cgmlst_data
a <- cgmlst_data %>% filter(serovar == "Monophasic" & cgmslt_ST == 1652656062)
a
a <- cgmlst_data %>% filter(serovar == "Monophasic" & cgmslt_ST == "1652656062")
a <- cgmlst_data %>% filter(serovar == "Monophasic" & cgmlst_ST == 1652656062)
summary(a)
a <- cgmlst_data %>% filter(serovar == "Monophasic" & cgmlst_ST == 860079270)
summary(a)
baps_data
a <- baps_data %>% filter(baps_1 = 4)
a <- baps_data %>% filter(baps_1 == 4)
a
summary(a)
a <- baps_data %>% filter(baps_1 == 5)
summary(a)
st_data2 <- data23b %>%
drop_na(serovar, st)
st_data2
chisq_st <- chisq.test(table(st_data2$serovar,st_data2$st))
chisq_st
head(serovar_data)
a <- serovar_data %>% filter(serovar == "Biphasic") %>% select(group, prop_serovar)
b <- serovar_data %>% filter(serovar == "Monophasic") %>% select(group, prop_serovar)
summary(a)
summary(b)
