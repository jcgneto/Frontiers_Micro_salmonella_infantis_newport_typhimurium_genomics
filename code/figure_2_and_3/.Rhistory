theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40))
p7
# get the variance explained
b <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/newport/pca_newport/deviance_model.csv')
b
p2b
p6b
# Enter group1-Baps
# Enter the data, create a new column for group, and generate the id column
data4 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/input_data/roary_output_gr1.fastbaps_l6.csv")
data4$group <- "group_1"
colnames(data4)[1:2] <- c("id", "baps_1")
d1 <- data4 %>% select(id, baps_1, group)
###########################################################################
# Enter MLST results
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'/'), "[", 3)
s1 <- mlst %>% separate(id2, c("id", "day"), sep = "\\.")
# Select columns of interest
s2 <- s1 %>%
select(id, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
# QC the data
skim(s2)
# st
s2$st <- ifelse(s2$ST == 19, "ST19",
ifelse(s2$ST == 34, "ST34",
ifelse(s2$ST == 36, "ST36",
ifelse(s2$ST == 313, "ST313", "Other STs"))))
# Create data1
d2 <- s2
####################################################################
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/global_input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Select columns
sis1 <- sistr %>%
select(genome, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
rename(id = genome)
d3 <- sis1
d3 <- mutate(d3, cgmlst = ifelse(cgmlst_ST %in% 1652656062, "cgMLST 1652656062",
ifelse(cgmlst_ST %in% 860079270, "cgMLST 860079270", "Other cgMLSTs")))
##########################################################################
# KMER
data1 <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/kmer_matrix/kmer_group_1_typhimurium.csv')
#  Non-supervised kmeans clustering analysis
cluster_data <- data1 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 6)
data1$kmer_cluster <- km.final$cluster
data1$kmer_cluster <- as.factor(data1$kmer_cluster)
# select the column we need
d4 <- data1 %>% select(id, kmer_cluster)
##################################################################################
# SNP
data1 <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/snp_matrix/snp_group_1_typhimurium.csv')
#  Non-supervised kmeans clustering analysis
cluster_data <- data1 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 6)
data1$snp_cluster <- km.final$cluster
data1$snp_cluster <- as.factor(data1$snp_cluster)
# filter the column
d5 <- data1 %>% select(id, snp_cluster)
####################################################################################
#############################################################################################
# PCA CLUSTER
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/pca_group_1/pca_data2.csv")
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/pca_group_1/cluster2.csv")
d6 <- data1 %>% select(-X1)
d7 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d8 <- left_join(d1, d2, on = "id")
d9 <- left_join(d8, d3, on = "id")
d10 <- left_join(d9, d4, on = "id")
d11 <- left_join(d10, d5, on = "id")
d12 <- left_join(d11, d6, on = "id")
d13 <- left_join(d12, d7, on = "id")
# if NA for ST call others
d14 <- d13 %>% mutate(st = replace_na(st, "Other STs"))
d15 <- d14 %>% mutate(pca_cluster = cluster) %>% select(-cluster)
d15 <- d15 %>% mutate(baps_1 = as.factor(baps_1))
d15 <- d15 %>% mutate(pca_cluster = as.factor(pca_cluster))
d15 <- d15 %>% select(id, baps_1, st, cgmlst, kmer_cluster, snp_cluster, PC1, PC2, pca_cluster)
#############################################################################################
# Plot baps1 onto accessory genome
d15$baps_1 <- factor(d15$baps_1, levels=c("1", "2", "3", "4", "5", "6"))
p1 <- ggplot(d15, aes(x = PC1, y = PC2, color = baps_1)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("orange", "darkgreen", "darkred", "gray", "darkblue", "darkcyan")) +
ggtitle("M.") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='BAPS1') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p1
# Plot st onto accessory genome
d15$st <- factor(d15$st, levels=c("ST19", "ST34", "ST36", "ST313", "Other STs"))
p2 <- ggplot(d15, aes(x = PC1, y = PC2, color = st)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("darkblue", "darkgreen", "darkred", "gray", "orange")) +
ggtitle("N.") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='ST') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p2
d15$st <- factor(d15$st, levels=c("ST19", "ST34", "ST36", "ST313", "Other STs"))
p2b <- ggplot(d15, aes(x = PC1, y = PC2, color = st)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("darkblue", "darkgreen", "darkred", "gray", "orange")) +
ggtitle("") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='ST') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p2b
# Plot cgmlst onto accessory genome
d15$cgmlst <- factor(d15$cgmlst, levels=c("cgMLST 1652656062", "cgMLST 860079270", "Other cgMLSTs"))
p3 <- ggplot(d15, aes(x = PC1, y = PC2, color = cgmlst)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("darkblue", "darkred", "gray")) +
ggtitle("O.") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='cgMLST') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p3
# Plot kmer_cluster onto accessory genome
p4 <- ggplot(d15, aes(x = PC1, y = PC2, color = kmer_cluster)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("black", "darkred", "steelblue", "purple", "orange", "darkgreen")) +
ggtitle("P.") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='Kmer-clusters') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p4
# Plot snp_cluster onto accessory genome
p5 <- ggplot(d15, aes(x = PC1, y = PC2, color = snp_cluster)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("black", "darkred", "steelblue", "purple", "orange", "darkgreen")) +
ggtitle("Q.") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='SNP-clusters') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p5
# Plot pca_cluster onto accessory genome
p6 <- ggplot(d15, aes(x = PC1, y = PC2, color = pca_cluster)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("gray", "darkred", "darkblue")) +
ggtitle("R.") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='PCA-clusters') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p6
p6b <- ggplot(d15, aes(x = PC1, y = PC2, color = pca_cluster)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("gray", "darkred", "darkblue")) +
ggtitle("") +
theme(plot.title = element_text(size = 50, face = "bold")) +
labs(color='PCA-clusters') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p6b
########################################################################
# retrieving PCA information
a <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/pca_group_1/wss2.csv')
p7 <- ggplot(a, aes(x = X1, y = wss)) + geom_line() + xlab("Clusters") + ylab("Within cluster sum of squares") +
scale_x_continuous(breaks = c(seq(from = 0, to = 10, by = 1))) +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40))
p7
# get the variance explained
b <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/typhimurium/group_1/pca_group_1/deviance_model.csv')
b
p2b
p6b
library(diversity)
library(vegan)
citation("vegan")
# Load packages
library(tidyverse)
library(skimr)
library(RColorBrewer)
library(gridExtra)
library(lattice)
library(ggpubr)
library(vegan)
library(reshape2)
library(ggrepel)
library(ggnewscale)
library(forcats)
library(naniar)
library(data.table)
library(rARPACK)
library(logisticPCA)
library(cluster)
library(factoextra)
library(NbClust)
package_version(cluster)
package_version("cluster")
# Load packages
library(tidyverse)
library(skimr)
library(RColorBrewer)
library(gridExtra)
library(lattice)
library(ggpubr)
library(vegan)
library(reshape2)
library(ggrepel)
library(ggnewscale)
library(forcats)
library(naniar)
library(Rtsne)
# Install ggtree
#if (!requireNamespace("BiocManager", quietly = TRUE))
# install.packages("BiocManager")
#BiocManager::install(version = "3.11")
#BiocManager::install("ggtree")
# Load ggtree
library(ggtree)
# Enter MLST results
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
rename(id = id2)
# st
s1$st <- ifelse(s1$ST == 32, "ST32", "Other STs")
data1 <- s1
# check the number of unique STs
a <-
a <- data1 %>% select(ST) %>% drop_na() %>% distinct(ST) %>% count()
a
a
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
rename(id = id2)
dim(s1)
# Enter MLST results
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
rename(id = id2)
# st
s1$st <- ifelse(s1$ST == 32, "ST32", "Other STs")
data1 <- s1
# check the number of unique STs
a <- data1 %>% select(ST) %>% drop_na() %>% distinct(ST) %>% count()
a
####################################################################
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Infantis", "Infantis",
"Other serovars")
data2 <- sis1
# check the number of unique cgmlts
a <- data2 %>% select(cgmlst_ST) %>% drop_na() %>% distinct(cgmlst_ST) %>% count()
a
############################################################
# Enter Baps 1-6
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:2] <- c("id", "baps_1")
# Select colunms id and baps_1
b1 <- baps %>%
select(id, baps_1)
data3 <- b1
# check the number of unique baps1 sub-groups
a <- data3 %>% select(baps_1) %>% drop_na() %>% distinct(baps_1) %>% count()
a
############################################################################
# Merge data1 and data2
data_1_2 <- left_join(data1, data2, on = "id")
# Merge data_1_2 with data_baps
data4 <- left_join(data_1_2, data3, on = "id")
data5 <- data4 %>%
select(id, st, cgmlst_ST, serovar, baps_1)
############################################################################
# Plot Serovar distribution
serovar_data <- data5 %>%
drop_na(serovar) %>%
select(serovar) %>%
group_by(serovar) %>%
summarise(n = n()) %>%
mutate(prop_serovar = n/sum(n)*100)
sero_plot <- ggplot(serovar_data, aes(x = prop_serovar, y = serovar, fill = serovar)) + xlim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
ylab("") +
xlab("Proportion") +
theme(axis.text.y = element_text(size = 30)) +
theme(axis.title.y = element_text(size = 30, face = "bold")) +
theme(axis.title.x = element_text(size = 30, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.7, size = 26)) +
scale_fill_manual(values=c("darkblue", "gray")) +
ggtitle("Serovar") +
theme(plot.title = element_text(size = 40, face = "bold")) +
geom_col() +
annotate(geom = "text", label = "n = 1,686 genomes", x = 50, y = 2,
color = "black", size = 8)
sero_plot
##################################################################################
# Plot ST distribution
st_data <- data5 %>%
drop_na(serovar, st) %>%
select(serovar, st) %>%
group_by(serovar, st) %>%
summarise(n = n()) %>%
mutate(prop_st = n/sum(n)*100) %>%
filter(serovar != "Other serovars")
st_data$st <- factor(st_data$st, levels=c("ST32", "Other STs"))
st_data
head(data2)
cgmlst_prop <- data2 %>%
drop_na(cgmlst_ST) %>%
mutate(cgmlst_ST = as.factor(cgmlst_ST)) %>%
select(cgmlst_ST) %>%
group_by(cgmlst_ST) %>%
summarise(n = n()) %>%
mutate(prop_cgmlst = n/sum(n)*100)
head(cgmlst_prop)
cgmlst_prop <- data2 %>%
drop_na(cgmlst_ST) %>%
mutate(cgmlst_ST = as.factor(cgmlst_ST)) %>%
select(cgmlst_ST) %>%
group_by(cgmlst_ST) %>%
summarise(n = n()) %>%
mutate(prop_cgmlst = n/sum(n)*100) %>%
arrange(desc(prop_cgmlst))
head(cgmlst_prop)
View(cgmlst_prop)
# Enter MLST results
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/newport/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
rename(id = id2)
# st
s1$st <- ifelse(s1$ST == 5, "ST5",
ifelse(s1$ST == 45, "ST45",
ifelse(s1$ST == 118, "ST118", "Other STs")))
data1 <- s1
# check the number of unique STs
a <- data1 %>% select(ST) %>% drop_na() %>% distinct(ST) %>% count()
a
####################################################################
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/newport/input_data/sistr_output.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Newport", "Newport",
"Other serovars")
data2 <- sis1
# check the number of unique baps_1 sub-groups
a <- data2 %>% select(cgmlst_ST) %>% drop_na() %>% distinct(cgmlst_ST) %>% count()
a
############################################################
# Enter Baps 1-6
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/newport/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:2] <- c("id", "baps_1")
# Select colunms id and baps_1
b1 <- baps %>%
select(id, baps_1)
data3 <- b1
# check the number of unique baps_1
a <- data3 %>% select(baps_1) %>% drop_na() %>% distinct(baps_1) %>% count()
a
############################################################################
# Merge data1 and data2
data_1_2 <- left_join(data1, data2, on = "id")
# Merge data_1_2 with data_baps
data4 <- left_join(data_1_2, data3, on = "id")
data5 <- data4 %>%
select(id, st, cgmlst_ST, serovar, baps_1)
head(s1)
st_prop <- s1 %>%
drop_na(st) %>%
select(st) %>%
group_by(st) %>%
summarise(n = n()) %>%
mutate(prop_st = n/sum(n)*100) %>%
arrange(desc(prop_st))
View(st_prop)
