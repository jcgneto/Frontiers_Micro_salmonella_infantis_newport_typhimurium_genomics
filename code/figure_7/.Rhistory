# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
mutate(id = id2)
# st
s1$st <- ifelse(s1$ST == 32, "ST32", "Other STs")
d2 <- s1
d2 <- d2 %>% select(-ST)
#############################################################################################
# CGMLST
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Infantis", "Infantis",
"Other serovars")
sis1 <- mutate(sis1, cgmlst = ifelse(cgmlst_ST %in% 2242423463, "cgMLST 2242423463",
"Other cgMLSTs"))
d3 <- sis1
d3 <- d3 %>% select(id, cgmlst)
#############################################################################################
# KMER CLUSTER
# Enter kmer-matrix
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/kmer_matrix/kmer_infantis.csv")
# generate cluster membership
#  Non-supervised kmeans clustering analysis
cluster_data <- data1 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 2)
data1$kmer_cluster <- km.final$cluster
data1$kmer_cluster <- as.factor(data1$kmer_cluster)
# select the column we need
d4 <- data1 %>% select(id, kmer_cluster)
#############################################################################################
# SNP CLUSTER
# enter snp matrix
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/snp_matrix/snp_infantis.csv")
#  Non-supervised kmeans clustering analysis
cluster_data <- data2 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 3)
data2$snp_cluster <- km.final$cluster
data2$snp_cluster <- as.factor(data2$snp_cluster)
# filter the column
d5 <- data2 %>% select(id, snp_cluster)
#############################################################################################
# PCA CLUSTER
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/pca_data2.csv")
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/cluster2.csv")
d6 <- data1 %>% select(-X1)
d7 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d8 <- left_join(d1, d2, on = "id")
d9 <- left_join(d8, d3, on = "id")
d10 <- left_join(d9, d4, on = "id")
d11 <- left_join(d10, d5, on = "id")
d12 <- left_join(d11, d6, on = "id")
d13 <- left_join(d12, d7, on = "id")
# if NA for ST call others
d14 <- d13 %>% mutate(st = replace_na(st, "Other STs"))
d15 <- d14 %>% mutate(pca_cluster = cluster) %>% select(-cluster)
d15 <- d15 %>% mutate(baps_1 = as.factor(baps_1))
d15 <- d15 %>% mutate(pca_cluster = as.factor(pca_cluster))
d16 <- left_join(d15, d3b, on = "id")
d16$source <- factor(d16$source, levels=c("Bovine", "Human", "Poultry", "Swine", "Environmental/Others"))
p6 <- ggplot(d16, aes(x = PC1, y = PC2, color = source)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("gray", "darkgreen", "darkblue", "coral", "purple")) +
labs(color='Source') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p6
##########################################################
d16b <- d16 %>% select(pca_cluster, source)
d16b <- d16b %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
# calculate the proportion of pca_cluster by source
data1 <- d16b %>%
select(source, pca) %>%
group_by(source, pca) %>%
dplyr::summarise(n = n()) %>%
mutate(total = sum(n)) %>%
mutate(prop = n/total*100)
# plot data
data1$pca <- factor(data1$pca, levels=c("Cluster 1", "Cluster 2"))
plot2 <- ggplot(data1, aes(x = prop, y = source, fill = pca)) + xlim(0, 101) +
theme_bw() +  xlab("Proportion") +
ylab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(strip.text.x = element_text(size = 30, face = "bold")) +
theme(legend.title=element_text(size=35, face = "bold"))+
theme(legend.text=element_text(size=30)) +
scale_fill_manual(name = "PCA-clusters", values=c("darkblue", "gray")) +
geom_bar(position="stack", stat="identity")
plot2
##################################################################
# Plot whole-genome distance using mash
d17 <- d16 %>% select(id, pca_cluster, source)
d18 <- read_tsv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/assemblies_kmer/ref_infantis_table.csv', col_names = TRUE)
# merge files
d19 <- left_join(d17, d18, on = "id")
d19 <- d19 %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
d19$pca <- factor(d19$pca, levels=c("Cluster 1", "Cluster 2"))
d20 <- column_to_rownames(d19, var = "id")
d21 <- d20 %>% select(pca, distance)
d22 <- d21 %>% group_by(pca) %>% mutate(sdx = sd(distance))
# plot distance distribution
p1 <- ggplot(d19, aes(x = distance, y = pca, color = pca)) +
geom_jitter(width = 0.01, size = 3) +
xlim(-0.1, 0.5) +
theme_minimal() +
theme(legend.position = "none") +
xlab("Whole-genome Kmer-based distance") +
ylab("") +
theme(axis.text.y = element_text(size = 30)) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 30)) +
theme(strip.text.x = element_text(size = 35)) +
scale_color_manual(values=c("darkblue", "darkred"))
p1
# calculate and plot the median and range of the kmer distance
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(median = median(x[[col]], na.rm=TRUE),
mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE),
range = range(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df2 <- data_summary(d21, varname="distance",
groupnames=c("pca"))
p2 <- ggplot(df2, aes(x = median, y = pca, color = pca)) +
geom_pointrange(aes(xmin = median-range1, xmax = median+range2, size = 4)) +
xlim(0, 0.3) +
theme_classic() +
theme(legend.position = "none") +
xlab("Whole-genome Kmer-based distance") +
ylab("") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme( axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))+
#theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 50)) +
scale_color_manual(values=c("darkblue", "darkred"))
p2
# plot by source
d20 <- column_to_rownames(d19, var = "id")
d21 <- d20 %>% select(source, distance)
# calculate and plot the median and range of the kmer distance
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(median = median(x[[col]], na.rm=TRUE),
mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE),
range = range(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df3 <- data_summary(d21, varname="distance",
groupnames=c("source"))
df3$source <- factor(df3$source, levels=c("Bovine", "Human", "Poultry", "Swine", "Environmental/Others"))
p3 <- ggplot(df3, aes(x = median, y = source, color = source)) +
geom_pointrange(aes(xmin = median-range1, xmax = median+range2, size = 4)) +
xlim(0, 0.31) +
theme_classic() +
theme(legend.position = "none") +
xlab("") +
ylab("") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme( axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))+
xlab("Whole-genome Kmer-based distance") +
#theme(axis.text.y = element_text(size = 40)) +
#theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 50)) +
scale_color_manual(values=c("gray", "darkgreen", "darkblue", "coral", "purple"))
p3
#############################################################################################
# CGMLST
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1 <- mutate(sis1, cgmlst = ifelse(cgmlst_ST %in% 2242423463, "cgMLST 2242423463",
ifelse(cgmlst_ST %in% 3873414194, "cgMLST 3873414194",
ifelse(cgmlst_ST %in% 1267535865, "cgMLST 1267535865",
ifelse(cgmlst_ST %in% 1582303201, "cgMLST 1582303201",
ifelse(cgmlst_ST %in% 1999638313, "cgMLST 1999638313",
ifelse(cgmlst_ST %in% 3087372233, "cgMLST 3087372233",
"Other cgMLSTs")))))))
d1 <- sis1
d1 <- d1 %>% select(id, cgmlst)
#############################################################################################
#############################################################################################
# PCA CLUSTER
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/cluster2.csv")
d2 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d3 <- left_join(d1, d2, on = "id")
d4 <- d3 %>% mutate(pca_cluster = cluster) %>% select(-cluster)
d4 <- d4 %>% mutate(pca_cluster = as.factor(pca_cluster))
# create a new column
d5 <- d4 %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
d6 <- d5 %>% select(-pca_cluster)
# merge data
d7 <- left_join(d6, d3b, on = "id")
data1 <- d7 %>%
select(cgmlst, year, source) %>%
group_by(source, year, cgmlst) %>%
summarise(n = n()) %>%
mutate(total = sum(n)) %>%
mutate(prop = n/total*100)
# enter metadata
d1 <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/metadata_cleaned_final_new.csv')
# rename variables
d3b <- d1 %>% select(id, source)
# check for missing values
vis_miss(d2)
#############################################
#############################################
# BAPS1
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:2] <- c("id", "baps_1")
# Select colunms id and baps_1
b1 <- baps %>%
select(id, baps_1)
d1 <- b1
#############################################################################################
# ST
# enter mlst data
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
mutate(id = id2)
# st
s1$st <- ifelse(s1$ST == 32, "ST32", "Other STs")
d2 <- s1
d2 <- d2 %>% select(-ST)
#############################################################################################
# CGMLST
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Infantis", "Infantis",
"Other serovars")
sis1 <- mutate(sis1, cgmlst = ifelse(cgmlst_ST %in% 2242423463, "cgMLST 2242423463",
"Other cgMLSTs"))
d3 <- sis1
d3 <- d3 %>% select(id, cgmlst)
#############################################################################################
# KMER CLUSTER
# Enter kmer-matrix
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/kmer_matrix/kmer_infantis.csv")
# generate cluster membership
#  Non-supervised kmeans clustering analysis
cluster_data <- data1 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 2)
data1$kmer_cluster <- km.final$cluster
data1$kmer_cluster <- as.factor(data1$kmer_cluster)
# select the column we need
d4 <- data1 %>% select(id, kmer_cluster)
#############################################################################################
# SNP CLUSTER
# enter snp matrix
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/snp_matrix/snp_infantis.csv")
#  Non-supervised kmeans clustering analysis
cluster_data <- data2 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 3)
data2$snp_cluster <- km.final$cluster
data2$snp_cluster <- as.factor(data2$snp_cluster)
# filter the column
d5 <- data2 %>% select(id, snp_cluster)
#############################################################################################
# PCA CLUSTER
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/pca_data2.csv")
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/cluster2.csv")
d6 <- data1 %>% select(-X1)
d7 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d8 <- left_join(d1, d2, on = "id")
d9 <- left_join(d8, d3, on = "id")
d10 <- left_join(d9, d4, on = "id")
d11 <- left_join(d10, d5, on = "id")
d12 <- left_join(d11, d6, on = "id")
d13 <- left_join(d12, d7, on = "id")
# if NA for ST call others
d14 <- d13 %>% mutate(st = replace_na(st, "Other STs"))
d15 <- d14 %>% mutate(pca_cluster = cluster) %>% select(-cluster)
d15 <- d15 %>% mutate(baps_1 = as.factor(baps_1))
d15 <- d15 %>% mutate(pca_cluster = as.factor(pca_cluster))
d16 <- left_join(d15, d3b, on = "id")
d16$source <- factor(d16$source, levels=c("Bovine", "Human", "Poultry", "Swine", "Environmental/Others"))
p6 <- ggplot(d16, aes(x = PC1, y = PC2, color = source)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("gray", "darkgreen", "darkblue", "coral", "purple")) +
labs(color='Source') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p6
##########################################################
d16b <- d16 %>% select(pca_cluster, source)
d16b <- d16b %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
# calculate the proportion of pca_cluster by source
data1 <- d16b %>%
select(source, pca) %>%
group_by(source, pca) %>%
dplyr::summarise(n = n()) %>%
mutate(total = sum(n)) %>%
mutate(prop = n/total*100)
# plot data
data1$pca <- factor(data1$pca, levels=c("Cluster 1", "Cluster 2"))
plot2 <- ggplot(data1, aes(x = prop, y = source, fill = pca)) + xlim(0, 101) +
theme_bw() +  xlab("Proportion") +
ylab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(strip.text.x = element_text(size = 30, face = "bold")) +
theme(legend.title=element_text(size=35, face = "bold"))+
theme(legend.text=element_text(size=30)) +
scale_fill_manual(name = "PCA-clusters", values=c("darkblue", "gray")) +
geom_bar(position="stack", stat="identity")
plot2
##################################################################
# Plot whole-genome distance using mash
d17 <- d16 %>% select(id, pca_cluster, source)
d18 <- read_tsv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/assemblies_kmer/ref_infantis_table.csv', col_names = TRUE)
# merge files
d19 <- left_join(d17, d18, on = "id")
d19 <- d19 %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
d19$pca <- factor(d19$pca, levels=c("Cluster 1", "Cluster 2"))
d20 <- column_to_rownames(d19, var = "id")
d21 <- d20 %>% select(pca, distance)
d22 <- d21 %>% group_by(pca) %>% mutate(sdx = sd(distance))
# plot distance distribution
p1 <- ggplot(d19, aes(x = distance, y = pca, color = pca)) +
geom_jitter(width = 0.01, size = 3) +
xlim(-0.1, 0.5) +
theme_minimal() +
theme(legend.position = "none") +
xlab("Whole-genome Kmer-based distance") +
ylab("") +
theme(axis.text.y = element_text(size = 30)) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 30)) +
theme(strip.text.x = element_text(size = 35)) +
scale_color_manual(values=c("darkblue", "darkred"))
p1
# calculate and plot the median and range of the kmer distance
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(median = median(x[[col]], na.rm=TRUE),
mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE),
range = range(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df2 <- data_summary(d21, varname="distance",
groupnames=c("pca"))
p2 <- ggplot(df2, aes(x = median, y = pca, color = pca)) +
geom_pointrange(aes(xmin = median-range1, xmax = median+range2, size = 4)) +
xlim(0, 0.3) +
theme_classic() +
theme(legend.position = "none") +
xlab("Whole-genome Kmer-based distance") +
ylab("") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme( axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))+
#theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 50)) +
scale_color_manual(values=c("darkblue", "darkred"))
p2
# plot by source
d20 <- column_to_rownames(d19, var = "id")
d21 <- d20 %>% select(source, distance)
# calculate and plot the median and range of the kmer distance
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(median = median(x[[col]], na.rm=TRUE),
mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE),
range = range(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df3 <- data_summary(d21, varname="distance",
groupnames=c("source"))
df3$source <- factor(df3$source, levels=c("Bovine", "Human", "Poultry", "Swine", "Environmental/Others"))
p3 <- ggplot(df3, aes(x = median, y = source, color = source)) +
geom_pointrange(aes(xmin = median-range1, xmax = median+range2, size = 4)) +
xlim(0, 0.31) +
theme_classic() +
theme(legend.position = "none") +
xlab("") +
ylab("") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme( axis.line = element_line(colour = "black",
size = 1, linetype = "solid"))+
xlab("Whole-genome Kmer-based distance") +
#theme(axis.text.y = element_text(size = 40)) +
#theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 50)) +
scale_color_manual(values=c("gray", "darkgreen", "darkblue", "coral", "purple"))
p3
p1
p2
p3
plot6
plot2
p6
d16b <- d16 %>% select(pca_cluster, source)
d16b <- d16b %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
# calculate the proportion of pca_cluster by source
data1 <- d16b %>%
select(source, pca) %>%
group_by(source, pca) %>%
dplyr::summarise(n = n()) %>%
mutate(total = sum(n)) %>%
mutate(prop = n/total*100)
View(data1)
