theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p6
##########################################################
d16b <- d16 %>% select(pca_cluster, source)
d16b <- d16b %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
# calculate the proportion of pca_cluster by source
data1 <- d16b %>%
select(source, pca) %>%
group_by(source, pca) %>%
dplyr::summarise(n = n()) %>%
mutate(total = sum(n)) %>%
mutate(prop = n/total*100)
head(d16b)
dim(d16b)
a <- d16b %>% select(source) %>% group_by(source) %>% count()
a
# enter metadata
d1 <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/metadata_cleaned_final_new.csv')
# rename variables
d2 <- d1 %>% select(id, collection_date, source)
# Combine all years less than 2015 into one group
d2 <- d2 %>%  mutate_all(na_if, "missing")
# change NA in the year column to zero
d2$collection_date[is.na(d2$collection_date)] <- 0
# transform year to numeric
d2 <- d2 %>% mutate(collection_date = as.numeric(collection_date))
# create a new column called Year
d2 <- mutate(d2, year = ifelse(collection_date == 2007, "2007",
ifelse(collection_date == 2008, "2008",
ifelse(collection_date == 2009, "2009",
ifelse(collection_date == 2010, "2010",
ifelse(collection_date == 2011, "2011",
ifelse(collection_date == 2012, "2012",
ifelse(collection_date == 2013, "2013",
ifelse(collection_date == 2014, "2014",
ifelse(collection_date == 2015, "2015",
ifelse(collection_date == 2016, "2016",
ifelse(collection_date == 2017, "2017",
ifelse(collection_date == 2018, "2018",
ifelse(collection_date == 2019, "2019",
"<= 2006"
))))))))))))))
# check for missing values
vis_miss(d2)
# filter only needed columns
d3b <- d2 %>% select(id, year, source)
#############################################
# BAPS1
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:2] <- c("id", "baps_1")
# Select colunms id and baps_1
b1 <- baps %>%
select(id, baps_1)
d1 <- b1
#############################################################################################
# ST
# enter mlst data
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
mutate(id = id2)
# st
s1$st <- ifelse(s1$ST == 32, "ST32", "Other STs")
d2 <- s1
d2 <- d2 %>% select(-ST)
#############################################################################################
# CGMLST
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Infantis", "Infantis",
"Other serovars")
sis1 <- mutate(sis1, cgmlst = ifelse(cgmlst_ST %in% 2242423463, "cgMLST 2242423463",
"Other cgMLSTs"))
d3 <- sis1
d3 <- d3 %>% select(id, cgmlst)
#############################################################################################
# KMER CLUSTER
# Enter kmer-matrix
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/kmer_matrix/kmer_infantis.csv")
# generate cluster membership
#  Non-supervised kmeans clustering analysis
cluster_data <- data1 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 2)
data1$kmer_cluster <- km.final$cluster
data1$kmer_cluster <- as.factor(data1$kmer_cluster)
# select the column we need
d4 <- data1 %>% select(id, kmer_cluster)
#############################################################################################
# SNP CLUSTER
# enter snp matrix
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/snp_matrix/snp_infantis.csv")
#  Non-supervised kmeans clustering analysis
cluster_data <- data2 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 3)
data2$snp_cluster <- km.final$cluster
data2$snp_cluster <- as.factor(data2$snp_cluster)
# filter the column
d5 <- data2 %>% select(id, snp_cluster)
#############################################################################################
# PCA CLUSTER
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/pca_data2.csv")
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/cluster2.csv")
d6 <- data1 %>% select(-X1)
d7 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d8 <- left_join(d1, d2, on = "id")
d9 <- left_join(d8, d3, on = "id")
d10 <- left_join(d9, d4, on = "id")
d11 <- left_join(d10, d5, on = "id")
d12 <- left_join(d11, d6, on = "id")
d13 <- left_join(d12, d7, on = "id")
# if NA for ST call others
d14 <- d13 %>% mutate(st = replace_na(st, "Other STs"))
d15 <- d14 %>% mutate(pca_cluster = cluster) %>% select(-cluster)
d15 <- d15 %>% mutate(baps_1 = as.factor(baps_1))
d15 <- d15 %>% mutate(pca_cluster = as.factor(pca_cluster))
# drop columns
d16 <- d15 %>% select(id, baps_1, st, cgmlst, pca_cluster)
# create a new colum
d17 <- d16 %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
d17 <- d17 %>% select(-pca_cluster)
# merge data
d18 <- left_join(d17, d3b, on = "id")
head(d18)
dim(d18)
a <- d18 %>% select(year) %>% group_by(year) %>% count()
a
p1a <- ggplot(a, aes(x = year, y = n)) + ylim(0, 1500) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 80, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.title=element_text(size=35, face = "bold"))+
theme(legend.text=element_text(size=30)) +
scale_color_manual(name = "PCA-clusters", values=c("darkblue", "gray")) +
theme(strip.text.x = element_text(size = 25, face = "bold")) +
#guides(linetype = guide_legend(override.aes = list(size = 10)))  +
geom_line(size=3) +
theme(legend.key.width = unit(3,"cm"))
p1a
p1a
a <- d18 %>% select(year) %>% group_by(year) %>% count()
a
p1a <- ggplot(a, aes(x = year, y = n)) + ylim(0, 1500) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 80, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.title=element_text(size=35, face = "bold"))+
theme(legend.position = "none")+
geom_line(size=3)
p1a
p1a
summary(a)
p1a <- ggplot(a, aes(x = year, y = n)) + ylim(0, 1500) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 80, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_line(size=3)
p1a
p1a
p1a <- ggplot(a, aes(x = year, y = n)) + ylim(0, 1500) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 80, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_line(size=3, color = "black")
p1a
p1a
p1a <- ggplot(a, aes(x = year, y = n)) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 80, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_line(size=3, color = "black")
p1a
p1a
a <- d18 %>% select(year) %>% group_by(year) %>% count()
a <- rename(a, count = n)
p1a <- ggplot(a, aes(x = year, y = count)) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_line(size=3, color = "black")
p1a
p1a
a
p1a <- ggplot(a, aes(x = year, y = count)) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_line()
p1a
p1a <- ggplot(a, aes(x = year, y = count)) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_bar()
a
p1a
p1a <- ggplot(a, aes(x = year, y = count)) +
theme_bw() +  xlab("Years") +
ylab("Number of genomes") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 20)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.title.y = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(legend.position = "none")+
geom_col()
p1a
head(d2)
d1 <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/metadata_cleaned_final_new.csv')
# rename variables
d2 <- d1 %>% select(id, collection_date, source)
# Combine all years less than 2015 into one group
d2 <- d2 %>%  mutate_all(na_if, "missing")
# change NA in the year column to zero
d2$collection_date[is.na(d2$collection_date)] <- 0
# transform year to numeric
d2 <- d2 %>% mutate(collection_date = as.numeric(collection_date))
head(d2)
table(d2$collection_date)
#############################################
# BAPS1
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:2] <- c("id", "baps_1")
# Select colunms id and baps_1
b1 <- baps %>%
select(id, baps_1)
d1 <- b1
#############################################################################################
# ST
# enter mlst data
mlst <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/salmonellast_output.csv')
# QC the data
skim(mlst)
# Generate the id column
mlst$id2 <- sapply(strsplit(as.character(mlst$FILE),'_'), "[", 1)
# Select columns of interest
s1 <- mlst %>%
select(id2, ST) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?") %>%
mutate(id = id2)
# st
s1$st <- ifelse(s1$ST == 32, "ST32", "Other STs")
d2 <- s1
d2 <- d2 %>% select(-ST)
#############################################################################################
# CGMLST
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
sis1$serovar <- ifelse(sis1$serovar_cgmlst == "Infantis", "Infantis",
"Other serovars")
sis1 <- mutate(sis1, cgmlst = ifelse(cgmlst_ST %in% 2242423463, "cgMLST 2242423463",
"Other cgMLSTs"))
d3 <- sis1
d3 <- d3 %>% select(id, cgmlst)
#############################################################################################
# KMER CLUSTER
# Enter kmer-matrix
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/kmer_matrix/kmer_infantis.csv")
# generate cluster membership
#  Non-supervised kmeans clustering analysis
cluster_data <- data1 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 2)
data1$kmer_cluster <- km.final$cluster
data1$kmer_cluster <- as.factor(data1$kmer_cluster)
# select the column we need
d4 <- data1 %>% select(id, kmer_cluster)
#############################################################################################
# SNP CLUSTER
# enter snp matrix
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/snp_matrix/snp_infantis.csv")
#  Non-supervised kmeans clustering analysis
cluster_data <- data2 %>% select(tSNE1, tSNE2)
# combining both approaches we determine that 2 clusters are enough
set.seed(123)
km.final <- kmeans(cluster_data, 3)
data2$snp_cluster <- km.final$cluster
data2$snp_cluster <- as.factor(data2$snp_cluster)
# filter the column
d5 <- data2 %>% select(id, snp_cluster)
#############################################################################################
# PCA CLUSTER
data1 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/pca_data2.csv")
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/cluster2.csv")
d6 <- data1 %>% select(-X1)
d7 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d8 <- left_join(d1, d2, on = "id")
d9 <- left_join(d8, d3, on = "id")
d10 <- left_join(d9, d4, on = "id")
d11 <- left_join(d10, d5, on = "id")
d12 <- left_join(d11, d6, on = "id")
d13 <- left_join(d12, d7, on = "id")
# if NA for ST call others
d14 <- d13 %>% mutate(st = replace_na(st, "Other STs"))
d15 <- d14 %>% mutate(pca_cluster = cluster) %>% select(-cluster)
d15 <- d15 %>% mutate(baps_1 = as.factor(baps_1))
d15 <- d15 %>% mutate(pca_cluster = as.factor(pca_cluster))
d16 <- left_join(d15, d3b, on = "id")
d16$source <- factor(d16$source, levels=c("Bovine", "Human", "Poultry", "Swine", "Environmental/Others"))
p6 <- ggplot(d16, aes(x = PC1, y = PC2, color = source)) +
theme_bw() +
xlab("PC1") +
ylab("PC2") +
theme(axis.text.y = element_text(size = 40)) +
theme(axis.title.y = element_text(size = 45, face = "bold")) +
theme(axis.title.x = element_text(size = 45, face = "bold")) +
theme(axis.text.x = element_text(angle = 0, hjust = 1, size = 40)) +
scale_color_manual(values=c("gray", "darkgreen", "darkblue", "coral", "purple")) +
labs(color='Source') +
geom_jitter(pch = 19, height = 1, width = 1, size = 4) +
theme(legend.title=element_text(size=50, face = "bold")) +
theme(legend.text=element_text(size=40)) +
guides(color = guide_legend(override.aes = list(size=20)))
p6
##########################################################
d16b <- d16 %>% select(pca_cluster, source)
d16b <- d16b %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
# calculate the proportion of pca_cluster by source
data1 <- d16b %>%
select(source, pca) %>%
group_by(source, pca) %>%
dplyr::summarise(n = n()) %>%
mutate(total = sum(n)) %>%
mutate(prop = n/total*100)
# plot data
data1$pca <- factor(data1$pca, levels=c("Cluster 1", "Cluster 2"))
plot2 <- ggplot(data1, aes(x = prop, y = source, fill = pca)) + xlim(0, 101) +
theme_bw() +  xlab("Proportion") +
ylab("") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 30)) +
theme(axis.title.x = element_text(size = 35, face = "bold")) +
theme(axis.text.y = element_text(angle = 0, hjust = 1, size = 30)) +
theme(strip.text.x = element_text(size = 30, face = "bold")) +
theme(legend.title=element_text(size=35, face = "bold"))+
theme(legend.text=element_text(size=30)) +
scale_fill_manual(name = "PCA-clusters", values=c("darkblue", "gray")) +
geom_bar(position="stack", stat="identity")
plot2
##################################################################
# Plot whole-genome distance using mash
d17 <- d16 %>% select(id, pca_cluster, source)
d18 <- read_tsv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/assemblies_kmer/ref_infantis_table.csv', col_names = TRUE)
# merge files
d19 <- left_join(d17, d18, on = "id")
d19 <- d19 %>% mutate(pca = ifelse(pca_cluster == "1", "Cluster 1", "Cluster 2"))
d19$pca <- factor(d19$pca, levels=c("Cluster 1", "Cluster 2"))
d20 <- column_to_rownames(d19, var = "id")
d21 <- d20 %>% select(pca, distance)
d22 <- d21 %>% group_by(pca) %>% mutate(sdx = sd(distance))
head(d22)
dim(d22)
table(d22$pca)
1699 + 1152
d20 <- column_to_rownames(d19, var = "id")
d21 <- d20 %>% select(source, distance)
# calculate and plot the median and range of the kmer distance
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(median = median(x[[col]], na.rm=TRUE),
mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE),
range = range(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
df3 <- data_summary(d21, varname="distance",
groupnames=c("source"))
df3$source <- factor(df3$source, levels=c("Bovine", "Human", "Poultry", "Swine", "Environmental/Others"))
head(df3)
table(df3$source)
head(d21)
table(d21$source)
#############################################
# BAPS1
baps <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/fastbaps_partition_baps_prior_l6.csv')
# Changing column names
colnames(baps)[1:7] <- c("id", "BAPS1", "BAPS2", "BAPS3", "BAPS4", "BAPS5", "BAPS6")
d1 <- baps
#############################################################################################
#############################################################################################
# CGMLST
# Enter SISTR results
sistr <- read_csv('~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/input_data/sistr_all.csv')
# QC the data
skim(sistr)
# Generate the id column
sistr$id <- sapply(strsplit(as.character(sistr$genome),'_'), "[", 1)
# Select columns
sis1 <- sistr %>%
select(id, cgmlst_ST, serovar_cgmlst) %>%
mutate_all(na_if, "-") %>%
mutate_all(na_if, "?")
d3 <- sis1
# PCA CLUSTER
data2 <- read_csv("~/Documents/frontiers_paper_salmonella_newport_typhimurium/data/infantis/pca_infantis/cluster2.csv")
d7 <- data2 %>% select(-X1)
#############################################################################################
#############################################################################################
# combining all datasets
d8 <- left_join(d1, d3, on = "id")
d9 <- left_join(d8, d7, on = "id")
# transform baps to factors
d9 <- d9 %>% mutate(BAPS2 = as.factor(BAPS2))
d9 <- d9 %>% mutate(BAPS3 = as.factor(BAPS3))
d9 <- d9 %>% mutate(BAPS4 = as.factor(BAPS4))
d9 <- d9 %>% mutate(BAPS5 = as.factor(BAPS5))
d9 <- d9 %>% mutate(BAPS6 = as.factor(BAPS6))
d10 <- d9 %>% select(-BAPS1)
# create a new colum
d10 <- d10 %>% mutate(pca = ifelse(cluster == "1", "Cluster 1", "Cluster 2"))
head(d10)
cgmlst_div <- d10 %>%
drop_na(cgmlst_ST)
dim(cgmlst_div)
baps2 <- d10 %>%
select(pca, BAPS2) %>%
drop_na(pca, BAPS2)
dim(baps2)
baps3 <- d10 %>%
select(pca, BAPS3) %>%
drop_na(pca, BAPS3)
dim(baps3)
baps4 <- d10 %>%
select(pca, BAPS4) %>%
drop_na(pca, BAPS4)
dim(baps4)
baps5 <- d10 %>%
select(pca, BAPS5) %>%
drop_na(pca, BAPS5)
dim(baps5)
baps6 <- d10 %>%
select(pca, BAPS6) %>%
drop_na(pca, BAPS6)
dim(baps6)
cgmlst_div <- d10 %>%
drop_na(cgmlst_ST)
dim(cgmlst_div)
sum(is.na(cgmlst_ST))
sum(is.na(cgmlst_div))
